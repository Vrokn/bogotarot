{"version":3,"sources":["Graphics/CartaAzul.svg","Graphics/Historias.svg","Graphics/Historiasmobil.svg","Graphics/Instrucciones.svg","Graphics/Instruccionesmobile.svg","Graphics/Presentación.svg","Components/Header.js","Components/CardGrid.js","Components/Intro.js","Components/Instructions.js","App.js","serviceWorker.js","index.js","Graphics/Ojoamarillo.svg","Graphics/Logosidpcmdb.svg"],"names":["module","exports","Header","useState","activeItem","setActiveItem","Menu","secondary","className","fluid","Item","position","Image","src","Logosidpcmdb","size","verticalAlign","to","Ojoamarillo","active","onClick","CardGrid","useImage","CartaAzul","image","React","x","y","stagePos","setStagePos","startX","Math","floor","window","innerWidth","endX","startY","innerHeight","endY","gridComponents","i","push","Fragment","key","width","height","shadowBlur","cornerRadius","fillPatternImage","draggable","onDragEnd","e","currentTarget","Intro","Grid","stackable","columns","Column","historias","historiasmobil","textAlign","Instructions","instrucciones","instruccionesMobile","Button","content","circular","App","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6728d7b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CartaAzul.0e006528.svg\";","module.exports = __webpack_public_path__ + \"static/media/Historias.a59be025.svg\";","module.exports = __webpack_public_path__ + \"static/media/Historiasmobil.ddeeebbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Instrucciones.fa0b5bdf.svg\";","module.exports = __webpack_public_path__ + \"static/media/Instruccionesmobile.fa33a900.svg\";","module.exports = __webpack_public_path__ + \"static/media/Presentación.17f55e3c.svg\";","import React, { useState } from 'react';\r\nimport { Menu, Image } from 'semantic-ui-react'\r\nimport Ojoamarillo from '../Graphics/Ojoamarillo.svg'\r\nimport Logosidpcmdb from '../Graphics/Logosidpcmdb.svg'\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nexport default function Header() {\r\n    const [activeItem, setActiveItem] = useState('Tarot');\r\n    return (\r\n        <>\r\n            <Menu secondary className='NavHeadermobil' fluid >\r\n                <Menu.Item className='logosidpcmobil' position='left' >\r\n                    <Image src={Logosidpcmdb} size='small' verticalAlign='middle' />\r\n                </Menu.Item>\r\n                <Menu.Item className='brandmobile' position='right'>\r\n                    <Link to=\"/menu\">\r\n                        <Image src={Ojoamarillo} verticalAlign='middle' />\r\n                    </Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n            <Menu secondary className='NavHeader' fluid >\r\n                <Menu.Item className='brand'>\r\n                    <Link to=\"/menu\">\r\n                        <Image src={Ojoamarillo} verticalAlign='middle' />\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item className='brand'\r\n                    active={activeItem === 'Introducción'}\r\n                    onClick={() => setActiveItem('Introducción')}\r\n                >\r\n                    <NavLink to=\"/introducción\">Introducción</NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item className='brand'\r\n                    active={activeItem === 'Instrucciones'}\r\n                    onClick={() => setActiveItem('Instrucciones')}\r\n                >\r\n                    <NavLink to=\"/instrucciones\">Instrucciones</NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item className='brand'\r\n                    active={activeItem === 'Tarot'}\r\n                    onClick={() => setActiveItem('Tarot')}\r\n                >\r\n                    <NavLink to=\"/tarot\">Tarot</NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item className='brand'\r\n                    active={activeItem === 'Causas'}\r\n                    onClick={() => setActiveItem('Causas')}\r\n                >\r\n                    <NavLink to=\"/causas\">Causas</NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item className='brand'\r\n                    active={activeItem === 'Archivo'}\r\n                    onClick={() => setActiveItem('Archivo')}\r\n                >\r\n                    <NavLink to=\"/archivo\">Archivo</NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item className='logosidpc' position='right' >\r\n                    <Image src={Logosidpcmdb} size='small' verticalAlign='middle' />\r\n                </Menu.Item>\r\n\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React, { } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport useImage from \"use-image\";\r\nimport CartaAzul from '../Graphics/CartaAzul.svg'\r\nconst WIDTH = 318;\r\nconst HEIGHT = 452;\r\n\r\nexport default function CardGrid() {\r\n    const [image] = useImage(CartaAzul);\r\n    const [stagePos, setStagePos] = React.useState({ x: 200, y: 200 });\r\n    const startX = Math.floor((-stagePos.x - window.innerWidth) / WIDTH) * WIDTH;\r\n    const endX = Math.floor((-stagePos.x + window.innerWidth * 2) / WIDTH) * WIDTH;\r\n    const startY = Math.floor((-stagePos.y - window.innerHeight) / HEIGHT) * HEIGHT;\r\n    const endY = Math.floor((-stagePos.y + window.innerHeight * 2) / HEIGHT) * HEIGHT;\r\n    const gridComponents = [];\r\n\r\n    let i = 0;\r\n    for (var x = startX; x < endX; x += WIDTH) {\r\n        for (var y = startY; y < endY; y += HEIGHT) {\r\n            i += 1;\r\n            gridComponents.push(\r\n                <React.Fragment key={i}>\r\n                    <Rect\r\n                        key={'1' + x + '-' + y}\r\n                        x={3.8 * x}\r\n                        y={1.2 * y}\r\n                        width={WIDTH}\r\n                        height={HEIGHT}\r\n                        shadowBlur={20}\r\n                        cornerRadius={10}\r\n                        fillPatternImage={image}\r\n                    />\r\n                    <Rect\r\n                        key={'2' + x + '-' + y}\r\n                        x={3.8 * x + 405}\r\n                        y={1.2 * y + 200}\r\n                        width={WIDTH}\r\n                        height={HEIGHT}\r\n                        shadowBlur={20}\r\n                        cornerRadius={10}\r\n                        fillPatternImage={image}\r\n                    />\r\n                    <Rect\r\n                        key={'3' + x + '-' + y}\r\n                        x={3.8 * x + 810}\r\n                        y={1.2 * y + 400}\r\n                        width={WIDTH}\r\n                        height={HEIGHT}\r\n                        shadowBlur={20}\r\n                        cornerRadius={10}\r\n                        fillPatternImage={image}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n    return (\r\n        <Stage\r\n            x={stagePos.x}\r\n            y={stagePos.y}\r\n            width={window.innerWidth}\r\n            height={window.innerHeight - 58}\r\n            draggable\r\n            onDragEnd={(e) => {\r\n                setStagePos(e.currentTarget.position());\r\n            }}\r\n        >\r\n            <Layer>{gridComponents}</Layer>\r\n        </Stage>\r\n    );\r\n};\r\n\r\n","import React from 'react'\r\nimport { Grid, Image, Modal } from 'semantic-ui-react'\r\nimport historias from '../Graphics/Historias.svg'\r\nimport historiasmobil from '../Graphics/Historiasmobil.svg'\r\nimport Ojoamarillo from '../Graphics/Ojoamarillo.svg'\r\nimport presentación from '../Graphics/Presentación.svg'\r\n\r\nfunction Intro() {\r\n\r\n    return (\r\n        <Grid className={'intro'} stackable columns={2}>\r\n            <Grid.Column>\r\n                <Image className={'introtitle'} src={historias} fluid />\r\n                <Image className={'introtitlemobile'} src={historiasmobil} fluid />\r\n                <Image className={'Ojoamarillomobile'} src={Ojoamarillo} />\r\n            </Grid.Column>\r\n            <Grid.Column className={'introdescription'} textAlign='justified'>\r\n                <p>\r\n                    El presente de la ciudad está marcado profundamente por la experiencia de las cuarentenas,\r\n                    la crisis ambiental, social y económica agudizada por la COVID-19, pero también está formado por la solidaridad,\r\n                    los nuevos encuentros y las vidas salvadas. Eso que llamamos “normalidad” y que podríamos añorar es un escenario\r\n                    insostenible para los seres humanos y el planeta.\r\n                            <br></br><br></br>\r\n                            Es el momento de preguntarnos qué queremos guardar de esta experiencia como aprendizaje colectivo.\r\n                            ¿Qué narrativas sobre el presente son esenciales para los bogotanos del futuro?\r\n                            <br></br><br></br>\r\n                            En este proyecto, el Museo de Bogotá les invita a que contestemos colectivamente esta pregunta:\r\n                            ¿Cuál es la mejor versión de Bogotá y qué necesitamos pensar, soñar y hacer para hacerla realidad?\r\n                            </p>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Intro\r\n","import React, { useState } from 'react';\r\nimport { Grid, Button, Image, Modal } from 'semantic-ui-react'\r\nimport instrucciones from '../Graphics/Instrucciones.svg'\r\nimport instruccionesMobile from '../Graphics/Instruccionesmobile.svg'\r\nimport Ojoamarillo from '../Graphics/Ojoamarillo.svg'\r\n\r\n\r\n\r\nfunction Instructions() {\r\n  const [activeItem, setActiveItem] = useState('A');\r\n\r\n  return (\r\n    <Grid className={'intro'} stackable columns={2}>\r\n      <Grid.Column>\r\n        <Image className={'instrutitle'} src={instrucciones} fluid />\r\n        <Image className={'instrutitlemobile'} src={instruccionesMobile} fluid />\r\n        <Image className={'Ojoamarillomobile'} src={Ojoamarillo} />\r\n\r\n      </Grid.Column>\r\n      <Grid.Column className={'instrucdescription'} >\r\n        <p>\r\n          Seleccione las tres cartas que prefiera haciendo click o tap sobre ellas. Estas cartas visualizan el presente y lo llevan a su destino.\r\n        </p>\r\n        <div className={'botonesabc'} >\r\n          <Button className={'instrubutton'} content='A' circular size='huge'\r\n            active={activeItem === 'A'}\r\n            onClick={() => setActiveItem('A')} />\r\n          <Button className={'instrubutton'} content='B' circular size='huge'\r\n            active={activeItem === 'B'}\r\n            onClick={() => setActiveItem('B')} />\r\n          <Button className={'instrubutton'} content='C' circular size='huge'\r\n            active={activeItem === 'C'}\r\n            onClick={() => setActiveItem('C')} />\r\n\r\n        </div>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Instructions\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, } from 'react-router-dom';\nimport Header from './Components/Header'\nimport './App.css';\n\nimport CardGrid from './Components/CardGrid';\nimport Intro from './Components/Intro';\nimport Instructions from './Components/Instructions';\n\nexport default function App() {\n  return (\n    <Router>\n      <Header />\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/tarot\" component={CardGrid} />\n          <Route path=\"/causas\">\n            <div>\n              <h2>causas</h2>\n            </div>\n          </Route>\n          <Route path=\"/instrucciones\">\n            <Instructions />\n          </Route>\n          <Route path=\"/introducción\">\n            <Intro />\n          </Route>\n          <Route path=\"/archivo\">\n            <div>\n              <h2>archivo</h2>\n            </div>\n          </Route>\n          <Route path=\"/menu\">\n            <div>\n              <h2>menu</h2>\n            </div>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Ojoamarillo.e710b2ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logosidpcmdb.0142c6e7.svg\";"],"sourceRoot":""}